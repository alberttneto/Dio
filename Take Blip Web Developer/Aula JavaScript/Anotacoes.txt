## Executar arquivo JavaScript no terminal:
-node "Nome do arquivo"

## Manipulando arrays
forEach() – itera um array;
push() – add item no final do array;
pop() – remove item no final do array;
shift() – remove item no início do array;
unshift() – add item no início do array;
indexOf() – retorna o índice de um valor;
splice() – remove ou substitui um item pelo índice;
slice() – retorna uma parte de um array existente;

## Objeto
var xicara = {cor: ‘azul’, tamanho: ‘p’, funcao: tomarCafe()}

## If Ternario
[condição] ? [instrução1] : [instrução2];

## For/in For/of
- for/in:
for ([indice] in [objeto ou array]) {declaracao}

- for/of
for ([indice] of [array]) {declaracao}

## Tipos de função
- Expressões de funções:
var funcao = function() {
${instrucao};
};

- Arrow function:
var funcao = () => {
${instrucao};
}

## Alguns metodos nativos:
Number() – para converter valores em números;
Prompt() – para registrar entradas de usuário;
Alert() – para mostrar mensagem ao usuário;
Template Strings – para usar strings junto com expressões;

## Operadores:
- x == y: Valor igual
- x === y: Mesmo valor e mesmo tipo
- x !== y: Valor e tipo diferente

## Variaveis dentro da String:
var nome = "Alberto";
var sobrenome = "Ferreira";
concatena = '$(nome) $(sobrenome)';

## Strings:
- 'string'.include('palavra'): Verifica se string contem palavra
- 'string'.startsWith('palavra'): Verifica se string começa com palavra

## Number:
- math.floor(numero) - Arredonda para baixo
- math.ceil(numero) - Arredonda para cima

## Função 
- autoinvocável:
(function(){})();

- CallBacks:
Função pode ser passada como parametro de outra função.

- Valor padrão para argumento:
function calc(num = 1){}; - se predefinido assume o valor 1.

- Objeto arguments:
Todos os argumentos passados como parametro da função

- Elementos de array como parametro (Spread):
nomefuncao(...nomeArray);

- Combinar parametros para formar um array (Rest):
function fun(...args){};

- Passando valor de atributo de objeto como parametro:
const user = {id: 50};
function fun(id); 50 será o valor do argumento.


## This:
- Call informa a que objeto o this está se referindo
function fun(){console.log(this.nome)};
fun.call(nomeObjeto, Argumentos);

- Apply Semelhante ao Call, mas quando passado argumentos deve usar array.
fun.apply(nomeObjeto, [argumentos]);

## Map
- Podem chaves de qualquer tipo

## Sets
- Só armazena valores unicos